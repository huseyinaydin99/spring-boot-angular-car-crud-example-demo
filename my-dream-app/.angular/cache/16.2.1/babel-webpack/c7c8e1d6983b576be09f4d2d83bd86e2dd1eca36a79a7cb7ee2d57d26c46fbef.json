{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { CarService } from '../shared/car/car.service';\nimport { GiphyService } from '../shared/giphy/giphy.service';\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared/car/car.service\";\nimport * as i3 from \"../shared/giphy/giphy.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CarEditComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function CarEditComponent_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.remove(ctx_r3.car.href));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let CarEditComponent = /*#__PURE__*/(() => {\n  var _class;\n  class CarEditComponent {\n    constructor(route, router, carService, giphyService) {\n      this.route = route;\n      this.router = router;\n      this.carService = carService;\n      this.giphyService = giphyService;\n      this.car = {};\n      this.today = new Date();\n      this.jstoday = '';\n      this.jstoday = formatDate(this.today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n    }\n    ngOnInit() {\n      this.sub = this.route.params.subscribe(params => {\n        const id = params['id'];\n        if (id) {\n          this.carService.get(id).subscribe(car => {\n            if (car) {\n              this.car = car;\n              this.car.href = car._links.self.href;\n              //this.giphyService.get(car.name).subscribe(url => car.giphyUrl = url);\n            } else {\n              console.log(`Car with id '${id}' not found, returning to list`);\n              this.gotoList();\n            }\n          });\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n    gotoList() {\n      this.router.navigate(['/car-list']);\n    }\n    save(form) {\n      this.carService.save(form).subscribe(result => {\n        this.gotoList();\n      }, error => console.error(error));\n    }\n    remove(href) {\n      this.carService.remove(href).subscribe(result => {\n        this.gotoList();\n      }, error => console.error(error));\n    }\n  }\n  _class = CarEditComponent;\n  _class.ɵfac = function CarEditComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CarService), i0.ɵɵdirectiveInject(i3.GiphyService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-car-edit\"]],\n    decls: 18,\n    vars: 6,\n    consts: [[1, \"card\", \"row\"], [1, \"card-header\"], [1, \"card-body\", \"col-xs-4\"], [3, \"ngSubmit\"], [\"carForm\", \"ngForm\"], [\"maxlength\", \"20\", \"type\", \"hidden\", \"name\", \"href\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Car Name\", \"required\", \"\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"btn btn-danger\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"/car-list\", 1, \"btn\", \"btn-warning\"], [1, \"giphy\"], [\"src\", \"/assets/images/car_test.png\", 3, \"alt\"], [1, \"card-footer\", \"text-muted\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function CarEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function CarEditComponent_Template_form_ngSubmit_4_listener() {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.save(_r0.value));\n        });\n        i0.ɵɵelementStart(6, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CarEditComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.car.href = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CarEditComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.car.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 8);\n        i0.ɵɵtext(10, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, CarEditComponent_button_11_Template, 2, 0, \"button\", 9);\n        i0.ɵɵelementStart(12, \"a\", 10);\n        i0.ɵɵtext(13, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 11);\n        i0.ɵɵelement(15, \"img\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵtext(17, \" 2 days ago \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.car.name ? \"Edit\" : \"Add\", \" Car \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.car.href);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.car.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.car.href);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"alt\", ctx.car.name);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MaxLengthValidator, i5.NgModel, i5.NgForm, i1.RouterLink],\n    styles: [\".giphy[_ngcontent-%COMP%]{margin:10px}\"]\n  });\n  return CarEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}