{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Huseyin_Aydin/Desktop/my-dream-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromPromise';\nimport { OktaAuthService } from '@okta/okta-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@okta/okta-angular\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  var _class;\n  class AuthInterceptor {\n    constructor(oktaAuth) {\n      this.oktaAuth = oktaAuth;\n    }\n    intercept(request, next) {\n      return Observable.fromPromise(this.handleAccess(request, next));\n    }\n    handleAccess(request, next) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        // Only add to localhost requests since Giphy's API fails when the request include a token\n        if (request.urlWithParams.indexOf('localhost') > -1) {\n          const accessToken = yield _this.oktaAuth.getAccessToken();\n          request = request.clone({\n            setHeaders: {\n              Authorization: 'Bearer ' + accessToken\n            }\n          });\n        }\n        return next.handle(request).toPromise();\n      })();\n    }\n  }\n  _class = AuthInterceptor;\n  _class.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.OktaAuthService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}