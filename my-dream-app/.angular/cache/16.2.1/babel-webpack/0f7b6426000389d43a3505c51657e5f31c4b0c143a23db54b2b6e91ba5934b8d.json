{"ast":null,"code":"var util = require('./util');\nvar http = require('./http');\nfunction sessionExists(sdk) {\n  return sdk.session.get().then(function (res) {\n    if (res.status === 'ACTIVE') {\n      return true;\n    }\n    return false;\n  }).fail(function () {\n    return false;\n  });\n}\nfunction getSession(sdk) {\n  return http.get(sdk, '/api/v1/sessions/me').then(function (session) {\n    var res = util.omit(session, '_links');\n    res.refresh = function () {\n      return http.post(sdk, util.getLink(session, 'refresh').href);\n    };\n    res.user = function () {\n      return http.get(sdk, util.getLink(session, 'user').href);\n    };\n    return res;\n  }).fail(function () {\n    // Return INACTIVE status on failure\n    return {\n      status: 'INACTIVE'\n    };\n  });\n}\nfunction closeSession(sdk) {\n  return http.httpRequest(sdk, {\n    url: sdk.options.url + '/api/v1/sessions/me',\n    method: 'DELETE'\n  });\n}\nfunction refreshSession(sdk) {\n  return http.post(sdk, '/api/v1/sessions/me/lifecycle/refresh');\n}\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location = sdk.options.url + '/login/sessionCookieRedirect' + util.toQueryParams({\n    checkAccountSetupComplete: true,\n    token: sessionToken,\n    redirectUrl: redirectUrl\n  });\n}\nmodule.exports = {\n  sessionExists: sessionExists,\n  getSession: getSession,\n  closeSession: closeSession,\n  refreshSession: refreshSession,\n  setCookieAndRedirect: setCookieAndRedirect\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}